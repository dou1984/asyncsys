// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pbmsg.proto

#ifndef PROTOBUF_INCLUDED_pbmsg_2eproto
#define PROTOBUF_INCLUDED_pbmsg_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_pbmsg_2eproto 

namespace protobuf_pbmsg_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_pbmsg_2eproto
class MsgBase;
class MsgBaseDefaultTypeInternal;
extern MsgBaseDefaultTypeInternal _MsgBase_default_instance_;
namespace google {
namespace protobuf {
template<> ::MsgBase* Arena::CreateMaybeMessage<::MsgBase>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class MsgBase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MsgBase) */ {
 public:
  MsgBase();
  virtual ~MsgBase();

  MsgBase(const MsgBase& from);

  inline MsgBase& operator=(const MsgBase& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgBase(MsgBase&& from) noexcept
    : MsgBase() {
    *this = ::std::move(from);
  }

  inline MsgBase& operator=(MsgBase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgBase* internal_default_instance() {
    return reinterpret_cast<const MsgBase*>(
               &_MsgBase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgBase* other);
  friend void swap(MsgBase& a, MsgBase& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgBase* New() const final {
    return CreateMaybeMessage<MsgBase>(NULL);
  }

  MsgBase* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgBase>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgBase& from);
  void MergeFrom(const MsgBase& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgBase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string server = 1;
  void clear_server();
  static const int kServerFieldNumber = 1;
  const ::std::string& server() const;
  void set_server(const ::std::string& value);
  #if LANG_CXX11
  void set_server(::std::string&& value);
  #endif
  void set_server(const char* value);
  void set_server(const char* value, size_t size);
  ::std::string* mutable_server();
  ::std::string* release_server();
  void set_allocated_server(::std::string* server);

  // string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // string channel = 3;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  const ::std::string& channel() const;
  void set_channel(const ::std::string& value);
  #if LANG_CXX11
  void set_channel(::std::string&& value);
  #endif
  void set_channel(const char* value);
  void set_channel(const char* value, size_t size);
  ::std::string* mutable_channel();
  ::std::string* release_channel();
  void set_allocated_channel(::std::string* channel);

  // string code = 4;
  void clear_code();
  static const int kCodeFieldNumber = 4;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // string session = 5;
  void clear_session();
  static const int kSessionFieldNumber = 5;
  const ::std::string& session() const;
  void set_session(const ::std::string& value);
  #if LANG_CXX11
  void set_session(::std::string&& value);
  #endif
  void set_session(const char* value);
  void set_session(const char* value, size_t size);
  ::std::string* mutable_session();
  ::std::string* release_session();
  void set_allocated_session(::std::string* session);

  // .google.protobuf.Any data = 100;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 100;
  private:
  const ::google::protobuf::Any& _internal_data() const;
  public:
  const ::google::protobuf::Any& data() const;
  ::google::protobuf::Any* release_data();
  ::google::protobuf::Any* mutable_data();
  void set_allocated_data(::google::protobuf::Any* data);

  // int32 error = 10;
  void clear_error();
  static const int kErrorFieldNumber = 10;
  ::google::protobuf::int32 error() const;
  void set_error(::google::protobuf::int32 value);

  // uint64 index = 11;
  void clear_index();
  static const int kIndexFieldNumber = 11;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // uint64 tstamp = 12;
  void clear_tstamp();
  static const int kTstampFieldNumber = 12;
  ::google::protobuf::uint64 tstamp() const;
  void set_tstamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MsgBase)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr server_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr channel_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr session_;
  ::google::protobuf::Any* data_;
  ::google::protobuf::int32 error_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 tstamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_pbmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgBase

// string server = 1;
inline void MsgBase::clear_server() {
  server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBase::server() const {
  // @@protoc_insertion_point(field_get:MsgBase.server)
  return server_.GetNoArena();
}
inline void MsgBase::set_server(const ::std::string& value) {
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgBase.server)
}
#if LANG_CXX11
inline void MsgBase::set_server(::std::string&& value) {
  
  server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgBase.server)
}
#endif
inline void MsgBase::set_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgBase.server)
}
inline void MsgBase::set_server(const char* value, size_t size) {
  
  server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgBase.server)
}
inline ::std::string* MsgBase::mutable_server() {
  
  // @@protoc_insertion_point(field_mutable:MsgBase.server)
  return server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBase::release_server() {
  // @@protoc_insertion_point(field_release:MsgBase.server)
  
  return server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBase::set_allocated_server(::std::string* server) {
  if (server != NULL) {
    
  } else {
    
  }
  server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server);
  // @@protoc_insertion_point(field_set_allocated:MsgBase.server)
}

// string method = 2;
inline void MsgBase::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBase::method() const {
  // @@protoc_insertion_point(field_get:MsgBase.method)
  return method_.GetNoArena();
}
inline void MsgBase::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgBase.method)
}
#if LANG_CXX11
inline void MsgBase::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgBase.method)
}
#endif
inline void MsgBase::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgBase.method)
}
inline void MsgBase::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgBase.method)
}
inline ::std::string* MsgBase::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:MsgBase.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBase::release_method() {
  // @@protoc_insertion_point(field_release:MsgBase.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBase::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:MsgBase.method)
}

// string channel = 3;
inline void MsgBase::clear_channel() {
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBase::channel() const {
  // @@protoc_insertion_point(field_get:MsgBase.channel)
  return channel_.GetNoArena();
}
inline void MsgBase::set_channel(const ::std::string& value) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgBase.channel)
}
#if LANG_CXX11
inline void MsgBase::set_channel(::std::string&& value) {
  
  channel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgBase.channel)
}
#endif
inline void MsgBase::set_channel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgBase.channel)
}
inline void MsgBase::set_channel(const char* value, size_t size) {
  
  channel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgBase.channel)
}
inline ::std::string* MsgBase::mutable_channel() {
  
  // @@protoc_insertion_point(field_mutable:MsgBase.channel)
  return channel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBase::release_channel() {
  // @@protoc_insertion_point(field_release:MsgBase.channel)
  
  return channel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBase::set_allocated_channel(::std::string* channel) {
  if (channel != NULL) {
    
  } else {
    
  }
  channel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel);
  // @@protoc_insertion_point(field_set_allocated:MsgBase.channel)
}

// string code = 4;
inline void MsgBase::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBase::code() const {
  // @@protoc_insertion_point(field_get:MsgBase.code)
  return code_.GetNoArena();
}
inline void MsgBase::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgBase.code)
}
#if LANG_CXX11
inline void MsgBase::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgBase.code)
}
#endif
inline void MsgBase::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgBase.code)
}
inline void MsgBase::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgBase.code)
}
inline ::std::string* MsgBase::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:MsgBase.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBase::release_code() {
  // @@protoc_insertion_point(field_release:MsgBase.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBase::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:MsgBase.code)
}

// string session = 5;
inline void MsgBase::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgBase::session() const {
  // @@protoc_insertion_point(field_get:MsgBase.session)
  return session_.GetNoArena();
}
inline void MsgBase::set_session(const ::std::string& value) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MsgBase.session)
}
#if LANG_CXX11
inline void MsgBase::set_session(::std::string&& value) {
  
  session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MsgBase.session)
}
#endif
inline void MsgBase::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MsgBase.session)
}
inline void MsgBase::set_session(const char* value, size_t size) {
  
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MsgBase.session)
}
inline ::std::string* MsgBase::mutable_session() {
  
  // @@protoc_insertion_point(field_mutable:MsgBase.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgBase::release_session() {
  // @@protoc_insertion_point(field_release:MsgBase.session)
  
  return session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgBase::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    
  } else {
    
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:MsgBase.session)
}

// int32 error = 10;
inline void MsgBase::clear_error() {
  error_ = 0;
}
inline ::google::protobuf::int32 MsgBase::error() const {
  // @@protoc_insertion_point(field_get:MsgBase.error)
  return error_;
}
inline void MsgBase::set_error(::google::protobuf::int32 value) {
  
  error_ = value;
  // @@protoc_insertion_point(field_set:MsgBase.error)
}

// uint64 index = 11;
inline void MsgBase::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgBase::index() const {
  // @@protoc_insertion_point(field_get:MsgBase.index)
  return index_;
}
inline void MsgBase::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:MsgBase.index)
}

// uint64 tstamp = 12;
inline void MsgBase::clear_tstamp() {
  tstamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgBase::tstamp() const {
  // @@protoc_insertion_point(field_get:MsgBase.tstamp)
  return tstamp_;
}
inline void MsgBase::set_tstamp(::google::protobuf::uint64 value) {
  
  tstamp_ = value;
  // @@protoc_insertion_point(field_set:MsgBase.tstamp)
}

// .google.protobuf.Any data = 100;
inline bool MsgBase::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::google::protobuf::Any& MsgBase::_internal_data() const {
  return *data_;
}
inline const ::google::protobuf::Any& MsgBase::data() const {
  const ::google::protobuf::Any* p = data_;
  // @@protoc_insertion_point(field_get:MsgBase.data)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* MsgBase::release_data() {
  // @@protoc_insertion_point(field_release:MsgBase.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* MsgBase::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Any>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:MsgBase.data)
  return data_;
}
inline void MsgBase::set_allocated_data(::google::protobuf::Any* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:MsgBase.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_pbmsg_2eproto
